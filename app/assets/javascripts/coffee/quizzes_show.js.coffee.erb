player = null

$ ->

  remove_accents = (str) ->
    str = str.replace(/^\s+|\s+$/g, "").toLowerCase() # trim and force lowercase
    from = "ãàáäâèéëêìíïîòóöôùúüûñç"
    to = "aaaaaeeeeiiiioooouuuunc"
    for i in [0..from.length]
      str = str.replace(from.charAt(i), to.charAt(i))
    return str

  type = $('#data').attr('data-quiz-type')
  name = $('#data').attr('data-quiz-name')
  description = $('#data').attr('data-quiz-description')
  interp_id = $('#data').attr('data-interp-id')
  youtube_id = $('#data').attr('data-youtube-id')
  title = $('#data').attr('data-video-title')
  console.log "type: " + type
  console.log "name: " + name
  console.log "description: " + description
  console.log "youtube_id: " + youtube_id

  window.keep_going = true
  window.pause_time = false
  $('#lyrics').addClass('quizframe')
  $('#lyrics-box').after('<div id="answer-box"></div>')

  $('#settings').append("
    <div class='quiz-report'>
      Name: #{name}
      <br>
      Description: #{description}
      <br>
      Video: #{title}
      <br>
      Video translator:
      <br>
      Quiz author: 
    </div>
  ")

  $('#settings').append("<div id='score'></div>")
  window.score = 0

  # BLANK OUT MISSING WORDS FOR VOCABULARY QUIZZES 

  lyrics = $('.line')

  if type == 'vocabulary'
    for l in lyrics
      for w in window.words
        console.log l
        $(l).html().replace("#{w}", "____")

  # PREP LINES TO BE CLICKED FOR GRAMMAR QUIZZES 

  if type == 'grammar'
    for l in lyrics
      console.log l
      $(l).lettering('words')

    $('[class^="word"]').livequery ->
      $(this).click ->
        this_word = $(this)
        if window.words.indexOf(this_word.html()) > -1
          this_word.addClass('blue')
          window.score += 1
          $('#score').html(window.score)
          window.keep_going = true
        else
          this_word.addClass('red')
          if window.score > 0
            window.score -= 1
            $('#score').html(window.score)
          window.keep_going = false

  quiz = (array, time) ->

    time_id = 'lang2-' + time
    if time == window.pause_time then player.pauseVideo()
    if window.keep_going == true then player.playVideo()

    if array.indexOf(time_id) > -1

      duration = parseInt($("#lang1-#{time}").attr('data-duration'))
      lang1 = $("#lang1-#{time}").html()
      lang2 = $("#lang2-#{time}").html()
      window.pause_time = time + duration

      for w in window.words
        $(".line").each(->
          console.log $(this).html()
        )
        console.log window.pause_lang1.match(/despierten/g)
        console.log window.pause_lang1.match(/"#{w}"/g)
        q += (lang1.match(/#{w}/g) || [] ).length
        console.log q

      if window.keep_going == true
        if $('#lyrics').attr('style') == "display: none;"
          $('#lyrics').slideDown()
          $('#score-box').slideDown()
        $("#lyrics").children().eq(0).html("<p class='lyrics white'>#{lang1}</p>").hide().slideDown(800)
        $("#lyrics").children().eq(1).html("<p class='lyrics white'>#{lang2}</p>").hide().slideDown(800)
        window.keep_going = false
      
  tag = document.createElement("script")
  tag.src = "https://www.youtube.com/iframe_api"
  firstScriptTag = document.getElementsByTagName("script")[0]
  firstScriptTag.parentNode.insertBefore tag, firstScriptTag

  window.onYouTubeIframeAPIReady = ->
    player = new YT.Player("new-video-box", {
      height: "315"
      width: "420"
      videoId: youtube_id
      playerVars: 
        {
        controls: 0
        cc_load_policy: 1
        }
      events:
        onReady: onPlayerReady })

    console.log "Checking for cc..." + player.getOptions().indexOf('cc')
    window.player = player

  onPlayerReady = (event) ->
    event.target.playVideo()

  arr = []
  lyrics = $(".line")
  jQuery.each lyrics, ->
    time = $(this).attr("data-time")
    arr.push time
  console.log "arr = " + arr
  countVideoPlayTime = ->

    exact_time = player.getCurrentTime()
    time = Math.round(exact_time)
    window.time = time
    do_quiz = quiz(arr, time)

  counter = setInterval(countVideoPlayTime, 1000)

  onPlayerStateChange = (event) ->
    if event.data is YT.PlayerState.PLAYING and not done
      done = true

  done = false