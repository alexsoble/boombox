$ ->

  formatTime = (time) ->
    time = Math.floor(time)
    if time <= 9 then formatted_time = "00:0" + time
    if 9 < time <= 59 then formatted_time = "00:" + time
    if 60 <= time < 540
      if time%60 <= 9 then formatted_time = "0" + Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = "0" + Math.floor((time)/60) + ":" + (time)%60
    if 540 <= time < 3600
      if time%60 <= 9 then formatted_time = Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = Math.floor((time)/60) + ":" + (time)%60
    formatted_time

  shortFormatTime = (time) ->
    time = Math.floor(time)
    if time <= 9 then formatted_time = ":0" + time
    if 9 < time <= 59 then formatted_time = ":" + time
    if 60 <= time < 540
      if time%60 <= 9 then formatted_time = Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = Math.floor((time)/60) + ":" + (time)%60
    if 540 <= time < 3600
      if time%60 <= 9 then formatted_time = Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = Math.floor((time)/60) + ":" + (time)%60
    formatted_time

  youtube_id = $('#data').attr('data-youtube-id')
  window.video_id = parseInt($('#data').attr('data-video-id'))

  tag = document.createElement("script")
  tag.src = "https://www.youtube.com/iframe_api"
  firstScriptTag = document.getElementsByTagName("script")[0]
  firstScriptTag.parentNode.insertBefore tag, firstScriptTag

  window.section = 0 
  window.time = 0
  window.got_volume = false
  window.video_play_counter = 0
  window.autoscroll = true
  window.exercise = false
  window.adding_content = false
  window.line_being_timed_id = 0
  window.editing_lines = false
  window.adding_times = false

  scrollPlaybackColumnUp = ->
    $('#playback-column').animate({
      top: "-=20"
    }, 1000)

  scrollPlaybackColumnDown = ->
    $('#playback-column').animate({
      top: "+=20"
    }, 1000)

  $('#scroll-up').click ->
    scrollPlaybackColumnUp()

  $('#scroll-down').click ->
    scrollPlaybackColumnDown()

  animatePlayhead = ->
    $('#playhead').animate({
      top: "+=20"
    }, 1000, "linear")

  startAnimatingPlayhead = ->
    window.playhead_interval = window.setInterval(animatePlayhead, 1000)

  stopAnimatingPlayhead = -> 
    clearInterval(window.playhead_interval)

  window.onYouTubeIframeAPIReady = ->
    player = new YT.Player("new-video-box", {
      height: "300"
      width: "420"
      videoId: youtube_id
      playerVars: 
        {
        controls: 0
        cc_load_policy: 1
        wmode: "opaque"
        }
      events:
        onReady: onPlayerReady
        onStateChange: onPlayerStateChange })
    console.log "Checking for cc..." + player.getOptions().indexOf('cc')
    window.player = player

  onPlayerReady = (event) ->
    video_duration = window.player.getDuration()
    window.video_duration = video_duration

    # $('#new-video-box').before("<div id='youtube-gem-box'>")
    # $('#new-video-box').after("</div>")

    # # # Playback column gets decoration

    $('#playback-column').attr('style',"height: #{video_duration * 10}px")

    for time in [0..video_duration]
      if $(".line[data-time=#{time}]").length > 0
        line = $(".line[data-time=#{time}]")
        line_text = line.text()
        $('#line-container').append("
          <div class='line-and-marker'>
            <div class='marker'>
              <div class='marker-text' data-time=#{time}>
                #{shortFormatTime(time)}
              </div>
            </div>
            <div class='line-area' data-time=#{time}>
              #{line_text}
            </div>
          </div>
        ")

    $('#column-slider-handle').draggable({
      axis: "y" 
      containment: "#playback-column-wrapper"
      containment: "#playback-column"
      drag: (event, ui) ->
        $('#line-container').attr("style","top: #{-(10 * ui.position.top)}px")
    })

    $('#row-slider-handle').draggable({
      axis: "x" 
      containment: "#playback-row"
      drag: (event, ui) ->
       console.log ui.position.left
       new_time = ui.position.left * (window.video_duration / 420)
       window.player.seekTo(new_time)
      stop: (event, ui) ->
       window.player.playVideo()
    })

    event.target.playVideo().setPlaybackRate(0.5)
    startAnimatingPlayhead()

  slowlyRemoveHighlight = (line) ->
    window.setTimeout(->
      line.removeClass('highlighted')
    , 4000)

  countVideoPlayTime = ->

    # IF PLAYER IS PLAYING, UPDATE THE PLAY COUNTER
    state = player.getPlayerState()
    if state == 2
      stopAnimatingPlayhead()
    if state == 1
      window.video_play_counter += 1
    if state == 0
      $('#watch-again').addClass('video-finished')
      $('#watch-again').html('<br><br><br><br><br><h3 class="link-style">Watch again?</class></h3>')
      $('iframe').remove()
      if window.video_play_counter + 10 > window.video_duration
        $.post("/update_playcount/#{window.playcount_id}", (data) ->
          new_playcount = data.data.play_count
          $('#video-play-counter').html(new_playcount)
        )
        window.video_play_counter = 0
      $('#watch-again').after('<div id="new-video-box"></div>')
    
    # UI RESPONDS AS VIDEO PLAYS
    exact_time = player.getCurrentTime()
    window.time = Math.floor(exact_time)

    $('#time-counter').html("#{shortFormatTime(window.time)}")
    
    if $(".line-area[data-time=#{window.time}]").length != 0
      this_line = $(".line-area[data-time=#{window.time}]")
      unless this_line.hasClass('highlighted')
        this_line.effect("highlight", { color: "#FFFF00" }, 4000)
        this_line.addClass("highlighted")
        slowlyRemoveHighlight(this_line)

    ###
    if $(".line[data-time=#{window.time}]").length > 0
      time = window.time
      line = $(".line[data-time=#{time}]")
      line_area = $(".line-area[data-time=#{time}]")
      line_area.text(line.text())
      line_area.removeClass('quiet')
    ###

  counter = setInterval(countVideoPlayTime, 400)
  done = false

  onPlayerStateChange = (event) ->
    if event.data == YT.PlayerState.PAUSED
      exact_time = player.getCurrentTime()
      window.time = Math.round(exact_time)
      window.section = window.time / window.loop_length

  delayedShow = ->
    window.player.playVideo()
  window.setTimeout(delayedShow, 1000)

  $('#watch-again').livequery ->
    $(this).click ->
      onYouTubeIframeAPIReady()
      $('#watch-again').removeClass('video-finished')
      $('#watch-again').html('')

  $('.line-area').livequery ->
    $(this).click ->
      window.player.seekTo(parseInt($(this).attr('data-time')))

  $('#add-a-line').click ->
    $('#new-line-area').html("
      <textarea id='new-line-input'></textarea>
      <div id='new-line-tools' class='tool-panel'>
        <i id='submit-new-line' class='icon icon-check'></i>
        <i id='back-from-adding-line' class='icon icon-remove'></i>
        <i id='new-line-options' class='icon icon-cog'></i>
      </div>
    ")
    $(this).remove()

  $('#back-from-adding-line').livequery ->
    $(this).click ->
      console.log 'back from adding line!'
      $('#add-a-line').html("<i class='icon icon-plus'></i>")
      $('#new-line-area').html('')

  $('#submit-new-line').livequery ->
    $(this).click ->
      val = $('#new-line-input').val()
      time = 0
      $('#line-container').append("
        <div class='line-and-marker'>
          <div class='marker'>
            <div class='marker-text' data-time=#{time}>
              #{shortFormatTime(time)}
            </div>
          </div>
          <div class='line-area' data-time=#{time}>
            #{val}
          </div>
        </div>")
