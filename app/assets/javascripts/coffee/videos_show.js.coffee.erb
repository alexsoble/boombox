$ ->

  formatTime = (time) ->
    time = Math.floor(time)
    if time <= 9 then formatted_time = "00:0" + time
    if 9 < time <= 59 then formatted_time = "00:" + time
    if 60 <= time < 540
      if time%60 <= 9 then formatted_time = "0" + Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = "0" + Math.floor((time)/60) + ":" + (time)%60
    if 540 <= time < 3600
      if time%60 <= 9 then formatted_time = Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = Math.floor((time)/60) + ":" + (time)%60
    formatted_time

  shortFormatTime = (time) ->
    time = Math.floor(time)
    if time <= 9 then formatted_time = ":0" + time
    if 9 < time <= 59 then formatted_time = ":" + time
    if 60 <= time < 540
      if time%60 <= 9 then formatted_time = Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = Math.floor((time)/60) + ":" + (time)%60
    if 540 <= time < 3600
      if time%60 <= 9 then formatted_time = Math.floor((time)/60) + ":0" + (time)%60
      if 9 < time%60 <= 59 then formatted_time = Math.floor((time)/60) + ":" + (time)%60
    formatted_time

  timeToWords = (time) ->
    time = Math.floor(time)
    if time < 60 then formatted_time = "less than a minute"
    if 60 <= time < 180 then formatted_time = "a few minutes" 
    if 180 <= time then formatted_time = "#{time/60} minutes" 
    formatted_time

  youtube_id = $('#data').attr('data-youtube-id')
  window.video_id = parseInt($('#data').attr('data-video-id'))

  tag = document.createElement("script")
  tag.src = "https://www.youtube.com/iframe_api"
  firstScriptTag = document.getElementsByTagName("script")[0]
  firstScriptTag.parentNode.insertBefore tag, firstScriptTag

  window.section = 0 
  window.time = 0
  window.got_volume = false
  window.video_play_counter = 0

  # WE GOTTA HAVE A PLAYBACK SLIDER

  $('#settings').append("
    <div class='playback-left-label end-label'><div class='playback-left-label inner-label'></div></div>
      <div id='playback-slider'></div>
    <div class='playback-right-label end-label'><div class='playback-right-label inner-label'></div></div>
  ")

  playbackControls = (video_duration) ->
    $('.playback-left-label.inner-label').html(":00")
    $('.playback-right-label.inner-label').html("#{shortFormatTime(video_duration)}")
  
    $('#playback-slider').slider(
        min: 0,
        max: video_duration,
        value: window.time,
        step: 1
        stop: (event, ui) ->
          player.seekTo($('#playback-slider').slider("value"))
        stop: (event, ui) ->
          player.seekTo($('#playback-slider').slider("value"))
      )

  window.onYouTubeIframeAPIReady = ->
    player = new YT.Player("new-video-box", {
      height: "315"
      width: "420"
      videoId: youtube_id
      playerVars: 
        {
        controls: 0
        cc_load_policy: 1
        wmode: "opaque"
        }
      events:
        onReady: onPlayerReady
        onStateChange: onPlayerStateChange })
    console.log "Checking for cc..." + player.getOptions().indexOf('cc')
    window.player = player

  onPlayerReady = (event) ->
    video_duration = window.player.getDuration()
    window.video_duration = video_duration
    window.half_duration = video_duration * .5
    playbackControls(video_duration)
    if window.loop_length == false
      straightPlaybackBehavior()
    event.target.playVideo()

    # CONTROLS FOR LONG VIDEOS COME IN HERE    
    if video_duration > 300
      longVideoControls()

  countVideoPlayTime = ->

    # IF PLAYER IS PLAYING, UPDATE THE PLAY COUNTER
    state = player.getPlayerState()
    if state == 1
      window.video_play_counter += .4
    if state == 0
      $('#watch-again').addClass('video-finished')
      $('#watch-again').html('<br><br><br><br><br><h3 class="link-style">Watch again?</class></h3>')
      $('iframe').remove()
      if window.video_play_counter + 10 > window.video_duration
        $.post("/update_playcount/#{window.playcount_id}", (data) ->
          new_playcount = data.play_count
          $('#video-play-counter').html(new_playcount)
        )
        window.video_play_counter = 0
      $('#watch-again').after('<div id="new-video-box"></div>')
    
    # UI RESPONDS AS VIDEO PLAYS
    exact_time = player.getCurrentTime()
    window.time = Math.floor(exact_time)
    this_line = $("[data-time=#{window.time}]")

    if this_line.length != 0
      unless this_line.hasClass('highlighted')
        this_line.children().effect("highlight", { color: "#FFFF00" }, 4000)
        this_line.addClass("highlighted")
        $("#community-notes").scrollTo(this_line.prev().children(':first'), { duration : 250 } )

    # PLAYBACK SLIDER MOVES HERE
    $('#playback-slider').slider("value", window.time)
    $('#playback-slider').children().html(shortFormatTime(window.time))

  counter = setInterval(countVideoPlayTime, 400)
  done = false

  onPlayerStateChange = (event) ->
    if event.data == YT.PlayerState.PAUSED
      exact_time = player.getCurrentTime()
      window.time = Math.round(exact_time)
      window.section = window.time / window.loop_length

  delayedShow = -> 
    window.player.playVideo()
  window.setTimeout(delayedShow, 1000)

  $('#watch-again').livequery ->
    $(this).click ->
      onYouTubeIframeAPIReady()
      $('#watch-again').removeClass('video-finished')
      $('#watch-again').html('')

  # CHECK TO SEE IF A PLAYCOUNT OBJECT EXISTS FOR THIS USER/VIDEO PAIR; IF NOT, CREATE ONE

  if window.user_id isnt null
    $.post("/find_playcount/#{window.user_id}/#{window.video_id}", (data) ->
      if data.playcount is 'no-playcount'
        $.post("/new_playcount/#{window.user_id}/#{window.video_id}", (data) ->
          window.playcount_id = data.playcount_id
          window.playcount_value = data.playcount_value
          $('#video-play-counter').html(window.playcount_value)
        )
      else
        window.playcount_id = data.playcount_id
    )
  
  availableTags = [ "English", "Dutch", "Afrikaans"
    "Chinese (Mandarin)", "Cantonese", "Japanese", "Korean"
    "Vietnamese", "Thai", "Burmese", "Filipino", "Tagalog", "Hmong", "Khmer", "Lao" 
    "French", "Spanish", "Portuguese", "Italian", "Catalan", "Romanian", "Albanian"
    "Russian", "Polish", "Czech"
    "German", "Greek"
    "Welsh"
    "Norwegian", "Swedish", "Danish", "Finnish", "Icelandic"
    "Hebrew", "Arabic", "Persian", "Pashto", "Turkish"
    "Hindi", "Bengali", "Gujarati", "Punjabi", "Sindhi", "Urdu", "Marathi"
    "Telugu", "Tamil", "Malayalam", "Sinhala"
    "Latin"
    "Swahili", "Yoruba", "Xhosa", "Somali", "Amharic"
    "Javanese", "Malay", "Indonesian"
    "Kazakh", "Tajik", "Tibetan", "Uyghur", "Uzbek"
    "Advanced", "Intermediate", "Beginner"
    "Fast lyrics", "Slow lyrics"
    "Slang" ]

  availableTags.sort (a,b) ->
    return if a >= b then 1 else -1

  $('#add-new-note').click -> 
    $('.note-category').removeClass('inactive')
    $('.note-category').addClass('option')
    $('#community-notes').html('')
    $('#big-tab').toggle('width')
    $('#all').slideUp()
    $(this).attr('style','right: -1px;')

  $('.option').livequery ->
    $(this).click ->
      category = $(this).attr('id')
      if category == 'vocabulary'
        $('#community-notes').html("        
          <span id='user-name'><h3>Add new vocabulary:</h3></span>
          <div id='vocab-list'></div>
          <input type='text' id='word-input' style='width: 150px;'> 
          = <input type='text' id='definition-input' style='width: 150px;'> 
          <br><br>
          <div id='submit-new-vocab' class='btn btn-primary btn-small rounded'> Submit </div>
          <div id='done' class='btn btn-primary btn-small rounded'> Done </div>
          <br><br>
          <div id='notice-area'></div>
        ")
      if category == 'multiple-choice'
        $('#community-notes').html("
          <span id='user-name'><h3>Add multiple-choice question:</h3></span>
          <input type='text' id='question-title' placeholder='Question title' style='width: 300px;'>
          <br><br>
          <li> &nbsp; <input type='text' class='mc-option' style='width: 200px;' placeholder='Option'> </li>
          <div class='new-multiple-choice-option'>
              <li> 
              &nbsp; <input type='text' class='new-multiple-choice-option' style='width: 200px;' placeholder='Click to add option' disabled=''> 
            </li>
          </div><br>
          <div id='submit-new-multiple-choice' class='btn btn-primary btn-small rounded'> Submit </div>
          <br><br>
          <div id='notice-area'></div>
        ")
      if category == 'discussion'
        $('#community-notes').html("
          <h3>Add new discussion question:</h3>
          <input type='text'>
        ")
      if category == 'translation'
        $('#community-notes')
      if category == 'link'
        $('#community-notes').html("
          <h3>Add a link:</h3>
          <input type='text'>
        ")

  postNewWord = (word, definition) ->
    $.post('/new_word', { 'word' : { 'video_id' : "#{window.video_id}", 'user_id' : "#{window.user_id}", 'text' : "#{word}" } }, (data) ->
      word_id = data.data.id
      $('#vocab-list').append("
        <li>#{word} = #{definition} &nbsp; <div id=#{word_id} class='add-time btn btn-primary btn-petite rounded'> Add time </div>
        </li>
      ")
      $.post('/new_definition', { 'definition' : { 'word_id' : "#{word_id}", 'user_id' : "#{window.user_id}", 'text' : "#{definition}" } }, (data) ->
        definition_id = data.data.id
      )
    )
    $('#word-input').val('')
    $('#definition-input').val('')

  $('#submit-new-vocab').livequery ->
    $(this).click ->
      if window.user == 'logged-out'
        $('#notice-area').html("<p style='color: #0f82f5;'><i>Please log in to add a new vocabulary word.</i></p>")
      else
        word = $('#word-input').val()
        definition = $('#definition-input').val()
        if word isnt '' and definition isnt '' and (word isnt definition)
          $.post("/find_interp/#{window.user_id}/#{window.video_id}", (data) ->
            if data.interp_id is 'no-interp'
              $.post("/new_interp/#{window.user_id}/#{window.video_id}", (data) ->
                window.interp_id = data.interp_id
                console.log "window.interp_id = #{window.interp_id}"
                postNewWord(word, definition)
              )
            else
              window.interp_id = data.interp_id
              console.log "window.interp_id = #{window.interp_id}"
              postNewWord(word, definition)
          )

  $('.new-multiple-choice-option').livequery ->
    $(this).click ->
      $(this).before("<li> &nbsp; <input type='text' class='mc-option' style='width: 200px;' placeholder='Option'> </li>")

  $('.add-time').livequery ->
    $(this).click ->
      window.word_id = parseInt($(this).attr('id'))
      $('.ui-slider-handle').addClass('vocab-time-selector')

  $('.vocab-time-selector').livequery ->
    $(this).dblclick ->
      $.post("/add_time_to_word", { 'word_id' : "#{window.word_id}", 'time' : "#{window.time}" }, (data) ->
        updated_time = data.data.time
        console.log updated_time
        $("##{window.word_id}").html(formatTime(updated_time))
        $('.ui-slider-handle').removeClass('vocab-time-selector')
      )

  $('#submit-new-multiple-choice').livequery ->
    $(this).click ->
      if window.user == 'logged-out'
        $('#notice-area').html("<p style='color: #0f82f5;'><i>Please log in to add a new vocabulary word.</i></p>")
      else
        challenge = $('#question-title').val()
        options = $('.mc-option')
        $.post('/new_challenge', { 'challenge' : { 'video_id' : "#{window.video_id}", 'user_id' : "#{window.user_id}", 'question_text' : "#{challenge}" } }, (data) ->
          challenge_id = data.data.id
          console.log "challenge = #{data.data.question_text}"
          options.each(->
            $.post('/new_option', { 'option' : { 'challenge_id' : "#{challenge_id}", 'answer_text' : "#{$(this).val()}" } }, (data) ->
              console.log "option = #{data.data.answer_text}"
            )
          )
        )

  $('#add-tag').click ->
    $('#tag-area').hide()
    $('#add-tag-action-prompt').hide()
    $('#new-tag-area').html("
      <div style='float: left; width: 180px;'>
        <span>New tag:<span>
        <br>
        <input id='new-tag' type='text' style='width: 160px; height: 18px; margin-top: 4px;'>
        <br>
        <div id='submit-new-tag' class='btn btn-primary btn-small rounded'> Submit </div>
        <div id='back-from-tagging' class='btn btn-primary btn-small rounded'> Back </div>
      </div>
      <div id='tag-types' style='float: right; width: 180px;'>
        <div style='width: 180px; float: left;'>
          <span>Tag description:</span>
        </div>
        <div style='width: 85px; float: left;'>
          <span class='tiny'><input type='checkbox' id='language' class='tag-type'>&nbsp; Language</span>
          <span class='tiny'><input type='checkbox' id='style' class='tag-type'>&nbsp; Style</span>
        </div>
        <div style='width: 85px; float: right;'>
          <span class='tiny'><input type='checkbox' id='difficulty' class='tag-type'>&nbsp; Difficulty</span>
          <span class='tiny'><input type='checkbox' id='artist' class='tag-type'>&nbsp; Artist</span>
        </div>
        <br>
      </div>
    ")

  $('#back-from-tagging').livequery ->
    $(this).click ->
      $('#tag-area').show()
      $('#add-tag-action-prompt').show()
      $('#new-tag-area').html("")

  $('.tag-type').livequery ->
    $(this).click ->
      if $(this).is(':checked')
        console.log "already checked"
      $('.tag-type').each(->
        $(this).prop("checked", false)
      )
      $(this).prop("checked", true)

  $('#new-tag').livequery -> 
    $('#new-tag').autocomplete(
      source: (request, response) ->
        matches = $.map(availableTags, (tag) ->
          tag  if tag.toUpperCase().indexOf(request.term.toUpperCase()) is 0)
        response matches
      minLength: 0
    )

  $('#submit-new-tag').livequery ->
    $(this).click ->
      if window.user_id == null
        $('#new-tag').val('Please log in first.')
      else
        new_tag = $('#new-tag').val()
        unless new_tag == '' or new_tag == 'Oops, enter a tag first.'
          $("input:checkbox").each(->
            if $(this).is(":checked") then window.tag_type = $(this).attr('id')
          )
          $.post('/new_tag', { 'name' : "#{new_tag}", 'user_id' : "#{window.user_id}", 'video_id' : "#{window.video_id}", 'tag_type' : "#{window.tag_type}" }, (data) ->
            if $('#tag-area').hasClass('no-tags')
              $('#tag-area').html("Tags: <span id='tags-list'> 
                #{data.tag.name}
                ")
              $('#tag-area').removeClass('no-tags').addClass('has-tags')
            else
              $('#tags-list').append("
                , #{data.tag.name}
              ")
            $('#new-tag-area').html("")
            $('#tag-area').show()
            $('#add-tag-action-prompt').show()
          )
        else
          $('#new-tag').val('Oops, enter a tag first.')
          

  $('#done').livequery ->
    $(this).click -> 
      $('#user-input').html('')
      $('#community-notes').slideDown()

  $('#star').click ->
    $(this).replaceWith("<i class='icon icon-star icon-2x' id='star-full' style='position: absolute; top: 10px; right: 10px; color: #0f82f5;'> </i>")

  $('#toggle-show-lines').click ->
    $('.short-line').each(->
      $(this).children().eq(0).removeClass('quiet')
      $(this).children().eq(1).removeClass('quiet')
    )

  $('.note-category').click ->
    if $(this).hasClass('active')
      $(this).effect("highlight", { color: 'yellow' }, 3000)
      unless $(this).attr('id') == 'all'
        $('.note-area').hide()
        category = $(this).attr('id')
        $(".#{category}-area").show()
      else 
        $('.note-area').show()