<div class="centerbox">
  <br>
  <h2><i><strong>Heyu</strong></i> gives <strong><i>you</i></strong> the power to turn any YouTube video into a langauge-learning resource.</h2>
  <h3>Search the globe to find Heyu videos.</h3>
</div>

<div id="globe-box">
  <div id="globe"></div>  
</div>

<script src="http://d3js.org/queue.v1.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>

<script>

window.current_country_hover = null; 

function fetchVideos(country) {
  name = country.attr('name');

  if (window.current_country_hover !== name) { 
    window.current_country_hover = name; 

    $('#country-results').remove();

    $.post("/fetch_videos", { 'type' : 'country', 'term' : name }, function(data) {
      country_position = $(".country[name='" + name + "']").offset();
      $('body').append("<div id='country-results' style='top: " + country_position.top + "px; left: " + country_position.left + "px'></div>");
      if (data.data.length === 0) {
        $('#country-results').html("<strong>" + name + "</strong>:<br/>No videos yet.<br/><a href='/new'>Add one?</a>");
      } else if (data.data.length === 1) {
        country_videos_html = "<strong>" + name + "</strong>:<br/><a href='/countries/" + name + "'>" + data.data.length + " video.</a>";
        $('#country-results').html(country_videos_html);
      } else {
        country_videos_html = "<strong>" + name + "</strong>:<br/><a href='/countries/" + name + "'>" + data.data.length + " video.</a>";
        $('#country-results').html(country_videos_html);
      }
    });
  }
}

var width = 960,
    height = 580;
    color = d3.scale.category10();

var projection = d3.geo.kavrayskiy7()
    .scale(170)
    .translate([width / 2, height / 2])
    .precision(.1);

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("#globe").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("defs").append("path")
    .datum({type: "Sphere"})
    .attr("id", "sphere")
    .attr("d", path);

svg.append("use")
    .attr("class", "stroke")
    .attr("xlink:href", "#sphere");

svg.append("use")
    .attr("class", "fill")
    .attr("xlink:href", "#sphere");

svg.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

queue()
    .defer(d3.json, "d3/world")
    .defer(d3.tsv, "d3/names")
    .await(ready);

function ready(error, world, names) {
  var countries = topojson.feature(world, world.objects.countries).features,
      n = countries.length;

  countries = countries.filter(function(d) {
      return names.some(function(n) {
        if (d.id == n.id) {
         return d.name = n.name;
       }
      });
    });

  svg.selectAll(".country")
      .data(countries)
    .enter().insert("path", ".graticule")
      .attr("class", "country")
      .attr("name", function(d) { return d.name; })
      .attr("d", path)
      .style("color", "gray");

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b; }))
      .attr("class", "boundary")
      .attr("d", path);

  d3.select(self.frameElement).style("height", height + "px");

  $(".country").hoverIntent(function() {
    fetchVideos($(this))
  });

}
</script>